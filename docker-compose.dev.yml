services:
  tns-energo:
    image: tns-energo:latest
    restart: unless-stopped
    container_name: tns-energo
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      ENV: dev
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: curl -X GET -f http://localhost:8080/health
      interval: 5s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:latest
    restart: unless-stopped
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql
    environment:
      POSTGRES_DB: tns-energo
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: sk8McoXvG7Cs
    ports:
      - "5432:5432"
    networks:
      - backend
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
  
  mongo:
    image: mongo:latest
    restart: unless-stopped
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoroot
      MONGO_INITDB_ROOT_PASSWORD: sB7RZMlOWmCov7jSsvrZ
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data
    networks:
      - backend
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 5s
      timeout: 5s
      retries: 5
  
  minio:
    image: minio/minio:latest
    restart: unless-stopped
    container_name: minio
    command: server --console-address ":9001" /data/
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: X8b3nTOBckRF
    volumes:
      - minio_data:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend
  
  nginx:
    image: nginx:latest
    restart: unless-stopped
    tty: true
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8080:8080"
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - tns-energo
    networks:
      - backend
    healthcheck:
      test: service nginx status || exit 1
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
  mongo_data:
  minio_data: